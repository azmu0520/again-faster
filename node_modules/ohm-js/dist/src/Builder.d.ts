export = Builder;
declare function Builder(): void;
declare class Builder {
    currentDecl: null;
    currentRuleName: null;
    newGrammar(name: any): GrammarDecl;
    grammar(metaInfo: any, name: any, superGrammar: any, defaultStartRule: any, rules: any): Grammar;
    terminal(x: any): import("./pexprs-main").Terminal;
    range(from: any, to: any): import("./pexprs-main").Range;
    param(index: any): import("./pexprs-main").Param;
    alt(...termArgs: any[]): any;
    seq(...factorArgs: any[]): any;
    star(expr: any): import("./pexprs-main").Star;
    plus(expr: any): import("./pexprs-main").Plus;
    opt(expr: any): import("./pexprs-main").Opt;
    not(expr: any): import("./pexprs-main").Not;
    la(expr: any): import("./pexprs-main").Lookahead;
    lookahead(expr: any): import("./pexprs-main").Lookahead;
    lex(expr: any): import("./pexprs-main").Lex;
    app(ruleName: any, optParams: any): import("./pexprs-main").Apply;
    splice(beforeTerms: any, afterTerms: any): import("./pexprs-main").Splice;
    fromRecipe(recipe: any): any;
}
import GrammarDecl = require("./GrammarDecl");
import Grammar = require("./Grammar");
