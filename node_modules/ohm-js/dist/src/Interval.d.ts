export = Interval;
declare function Interval(sourceString: any, startIdx: any, endIdx: any): void;
declare class Interval {
    constructor(sourceString: any, startIdx: any, endIdx: any);
    sourceString: any;
    startIdx: any;
    endIdx: any;
    coverageWith(...intervals: any[]): Interval;
    collapsedLeft(): Interval;
    collapsedRight(): Interval;
    getLineAndColumn(): {
        offset: any;
        lineNum: number;
        colNum: number;
        line: any;
        prevLine: any;
        nextLine: any;
        toString: (...ranges: any[]) => any;
    };
    getLineAndColumnMessage(): any;
    minus(that: any): Interval[];
    relativeTo(that: any): Interval;
    trimmed(): Interval;
    subInterval(offset: any, len: any): Interval;
}
declare namespace Interval {
    export { coverage };
}
declare function coverage(firstInterval: any, ...intervals: any[]): Interval;
